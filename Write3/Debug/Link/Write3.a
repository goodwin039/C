;/*******************************************************
;This program was created by the CodeWizardAVR V3.32
;Automatic Program Generator
;© Copyright 1998-2017 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project : Write3
;Version :
;Date    : 10.05.2018
;Author  :
;Company :
;Comments:
;
;
;Chip type               : ATtiny2313A
;AVR Core Clock frequency: 4,000000 MHz
;Memory model            : Tiny
;External RAM size       : 0
;Data Stack size         : 32
;*******************************************************/
;
;#include <tiny2313a.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x50
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_standby=0x40
;PCODE: $00000006 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $00000007 VOL: 0
	#endif
;PCODE: $00000008 VOL: 0
;PCODE: $00000009 VOL: 0
;#include <delay.h>
;
;// Declare your global variables here
;
;void main(void)
; 0000 001C {

	.CSEG
;PCODE: $0000000A VOL: 0
; 0000 001D // Declare your local variables here
; 0000 001E 
; 0000 001F // Crystal Oscillator division factor: 1
; 0000 0020 #pragma optsize-
; 0000 0021 CLKPR=(1<<CLKPCE);
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
; 0000 0022 CLKPR=(0<<CLKPCE) | (0<<CLKPS3) | (0<<CLKPS2) | (0<<CLKPS1) | (0<<CLKPS0);
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0023 #ifdef _OPTIMIZE_SIZE_
; 0000 0024 #pragma optsize+
; 0000 0025 #endif
; 0000 0026 
; 0000 0027 // Input/Output Ports initialization
; 0000 0028 // Port A initialization
; 0000 0029 // Function: Bit2=In Bit1=In Bit0=In
; 0000 002A DDRA=(0<<DDA2) | (0<<DDA1) | (0<<DDA0);
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 002B // State: Bit2=T Bit1=T Bit0=T
; 0000 002C PORTA=(0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 002D 
; 0000 002E // Port B initialization
; 0000 002F // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 0030 DDRB=(1<<DDB7) | (1<<DDB6) | (1<<DDB5) | (1<<DDB4) | (1<<DDB3) | (1<<DDB2) | (1<<DDB1) | (1<<DDB0);
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 0031 // State: Bit7=1 Bit6=1 Bit5=1 Bit4=1 Bit3=1 Bit2=1 Bit1=1 Bit0=1
; 0000 0032 PORTB=(1<<PORTB7) | (1<<PORTB6) | (1<<PORTB5) | (1<<PORTB4) | (1<<PORTB3) | (1<<PORTB2) | (1<<PORTB1) | (1<<PORTB0);
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 0033 
; 0000 0034 // Port D initialization
; 0000 0035 // Function: Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0036 DDRD=(0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 0037 // State: Bit6=P Bit5=P Bit4=P Bit3=P Bit2=P Bit1=P Bit0=P
; 0000 0038 PORTD=(1<<PORTD6) | (1<<PORTD5) | (1<<PORTD4) | (1<<PORTD3) | (1<<PORTD2) | (1<<PORTD1) | (1<<PORTD0);
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 0039 
; 0000 003A // Timer/Counter 0 initialization
; 0000 003B // Clock source: System Clock
; 0000 003C // Clock value: Timer 0 Stopped
; 0000 003D // Mode: Normal top=0xFF
; 0000 003E // OC0A output: Disconnected
; 0000 003F // OC0B output: Disconnected
; 0000 0040 TCCR0A=(0<<COM0A1) | (0<<COM0A0) | (0<<COM0B1) | (0<<COM0B0) | (0<<WGM01) | (0<<WGM00);
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 0041 TCCR0B=(0<<WGM02) | (0<<CS02) | (0<<CS01) | (0<<CS00);
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0042 TCNT0=0x00;
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0043 OCR0A=0x00;
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 0044 OCR0B=0x00;
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 0045 
; 0000 0046 // Timer/Counter 1 initialization
; 0000 0047 // Clock source: System Clock
; 0000 0048 // Clock value: Timer1 Stopped
; 0000 0049 // Mode: Normal top=0xFFFF
; 0000 004A // OC1A output: Disconnected
; 0000 004B // OC1B output: Disconnected
; 0000 004C // Noise Canceler: Off
; 0000 004D // Input Capture on Falling Edge
; 0000 004E // Timer1 Overflow Interrupt: Off
; 0000 004F // Input Capture Interrupt: Off
; 0000 0050 // Compare A Match Interrupt: Off
; 0000 0051 // Compare B Match Interrupt: Off
; 0000 0052 TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 0053 TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 0054 TCNT1H=0x00;
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 0055 TCNT1L=0x00;
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 0056 ICR1H=0x00;
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 0057 ICR1L=0x00;
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 0058 OCR1AH=0x00;
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 0059 OCR1AL=0x00;
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 005A OCR1BH=0x00;
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 005B OCR1BL=0x00;
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 005C 
; 0000 005D // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 005E TIMSK=(0<<TOIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<ICIE1) | (0<<OCIE0B) | (0<<TOIE0) | (0<<OCIE0A);
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 005F 
; 0000 0060 // External Interrupt(s) initialization
; 0000 0061 // INT0: Off
; 0000 0062 // INT1: Off
; 0000 0063 // Interrupt on any change on pins PCINT0-7: Off
; 0000 0064 // Interrupt on any change on pins PCINT8-10: Off
; 0000 0065 // Interrupt on any change on pins PCINT11-17: Off
; 0000 0066 MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 0067 GIMSK=(0<<INT1) | (0<<INT0) | (0<<PCIE0) | (0<<PCIE2) | (0<<PCIE1);
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 0068 
; 0000 0069 // USI initialization
; 0000 006A // Mode: Disabled
; 0000 006B // Clock source: Register & Counter=no clk.
; 0000 006C // USI Counter Overflow Interrupt: Off
; 0000 006D USICR=(0<<USISIE) | (0<<USIOIE) | (0<<USIWM1) | (0<<USIWM0) | (0<<USICS1) | (0<<USICS0) | (0<<USICLK) | (0<<USITC);
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 006E 
; 0000 006F // USART initialization
; 0000 0070 // USART disabled
; 0000 0071 UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (0<<RXEN) | (0<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 0072 
; 0000 0073 // Analog Comparator initialization
; 0000 0074 // Analog Comparator: Off
; 0000 0075 // The Analog Comparator's positive input is
; 0000 0076 // connected to the AIN0 pin
; 0000 0077 // The Analog Comparator's negative input is
; 0000 0078 // connected to the AIN1 pin
; 0000 0079 ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 007A // Digital input buffer on AIN0: On
; 0000 007B // Digital input buffer on AIN1: On
; 0000 007C DIDR=(0<<AIN0D) | (0<<AIN1D);
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 007D 
; 0000 007E 
; 0000 007F while (1)
;PCODE: $00000047 VOL: 0
; 0000 0080       {
; 0000 0081       // Place your code here
; 0000 0082        if(PIND.0 == 1){}
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 0083        else{
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 0084          delay_us(200);
;PCODE: $0000004D VOL: 0
; 0000 0085          if(PINB.0 == 1){
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0000 0086            PORTB.0 = 0;
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 0087 
; 0000 0088          } else {
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 0089                  PORTB.0 = 1;
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 008A 
; 0000 008B                 }
;PCODE: $00000057 VOL: 0
; 0000 008C        }
;PCODE: $00000058 VOL: 0
; 0000 008D        if (PIND.0 == 0){}
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 008E        delay_us(200);
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 008F       }
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 0090 }
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
